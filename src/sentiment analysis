import pandas as pd
import torch
from transformers import pipeline

# --- Configuration ---
FILE_PATH = 'amazon_product_reviews.xlsx'
OUTPUT_FILE_PATH = 'reviews_with_sentiment.xlsx'
TEXT_COLUMN = 'review_content'
BATCH_SIZE = 32

# --- Load Excel File ---
try:
    df = pd.read_excel(FILE_PATH)
    print(f"✅ Successfully loaded data from: {FILE_PATH}")
except FileNotFoundError:
    print(f"❌ Error: The file '{FILE_PATH}' was not found. Please ensure it is in the correct directory.")
    exit()

# --- Validate Review Column ---
if TEXT_COLUMN not in df.columns:
    print(f"❌ Error: Column '{TEXT_COLUMN}' not found. Please check the column name in your Excel file.")
    exit()

# --- Clean and Prepare Text ---
texts = df[TEXT_COLUMN].astype(str).fillna("").tolist()
total_entries = len(texts)
print(f"📦 Prepared {total_entries} entries for sentiment analysis.")

# --- Detect GPU (CUDA) Availability ---
device = 0 if torch.cuda.is_available() else -1

# --- Initialize Sentiment Pipeline ---
try:
    sentiment_pipeline = pipeline(
        "sentiment-analysis",
        model="distilbert-base-uncased-finetuned-sst-2-english",
        device=device
    )
    print(f"🚀 Initialized sentiment pipeline. Using device: {'GPU' if device == 0 else 'CPU'}")
except Exception as e:
    print(f"❌ Error initializing pipeline: {e}")
    exit()

# --- Batch Sentiment Analysis ---
sentiment_results = []
print("🔍 Starting sentiment analysis...")

for i in range(0, total_entries, BATCH_SIZE):
    batch = texts[i:i + BATCH_SIZE]
    
    try:
        results = sentiment_pipeline(batch)
        sentiment_results.extend(results)
    except Exception as e:
        print(f"⚠️ Error processing batch {i // BATCH_SIZE}: {e}")
        # Fill with neutral or empty result if preferred
        sentiment_results.extend([{'label': 'ERROR', 'score': 0.0}] * len(batch))

    # Progress update
    if i % (BATCH_SIZE * 10) == 0 and i > 0:
        print(f"   Processed {i}/{total_entries} reviews...")

print("✅ Sentiment analysis complete.")

# --- Add Sentiment Columns ---
df['Sentiment_Label'] = [res['label'] for res in sentiment_results]
df['Sentiment_Score'] = [res['score'] for res in sentiment_results]

# --- Save Output to Excel ---
try:
    df.to_excel(OUTPUT_FILE_PATH, index=False)
    print(f"💾 Results successfully saved to: {OUTPUT_FILE_PATH}")
except Exception as e:
    print(f"❌ Error saving file: {e}")
    exit()

# --- Display Sample Output ---
print("\n📊 First 5 results:")
print(df[[TEXT_COLUMN, 'Sentiment_Label', 'Sentiment_Score']].head())

print("\nℹ️ DataFrame Summary:")
df.info()
